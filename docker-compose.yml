version: '3'

services:
  web-primary:
    build: .
    restart: always
    command: python3 app.py
    expose:
      - "5000"
    depends_on:
      - db
      - redis

  web-worker1:
    build: .
    restart: always
    command: python3 app.py
    expose:
      - "5000"
    depends_on:
      - web-primary

  web-worker2:
    build: .
    restart: always
    command: python3 app.py
    expose:
      - "5000"
    depends_on:
      - web-primary

  web-worker3:
    build: .
    restart: always
    command: python3 app.py
    expose:
      - "5000"
    depends_on:
      - web-primary

  web-worker4:
    build: .
    restart: always
    command: python3 app.py
    expose:
      - "5000"
    depends_on:
      - web-primary
  
  # add extra workers here

  db:
    image: mongo:latest
    restart: always

  redis:
    image: redis:latest
    restart: always

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./static/:/usr/share/nginx/html/static/:ro
      - /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem:/etc/nginx/certs/certificate.pem
      - /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem:/etc/nginx/certs/key.pem
    depends_on:
      - web-worker1
      - web-worker2
      - web-worker3
      - web-worker4
      # add extra workers here
    environment:
      - SERVER_NAME=${SERVER_NAME}
    command: |
      bash -c 'bash -s <<EOF
        cat > /etc/nginx/conf.d/peld.conf <<EON
        upstream socketio_nodes {
            ip_hash;
            server web-worker1:5000;
            server web-worker2:5000;
            server web-worker3:5000;
            server web-worker4:5000;
            # add extra workers here
        }

        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name $$SERVER_NAME;

            location '/.well-known/acme-challenge' {
                default_type "text/plain";
                proxy_pass http://localhost:6000;
            }

            return 301 https://\\\$$host\\\$$request_uri;
        }

        server {
            listen 443 ssl;
            server_name $$SERVER_NAME;
            ssl_certificate     /etc/nginx/certs/certificate.pem;
            ssl_certificate_key /etc/nginx/certs/key.pem;

            location /static/ {
                gzip on;
                gzip_comp_level 6;
                gzip_types application/javascript application/x-javascript text/javascript;
                tcp_nodelay  on;
                sendfile_max_chunk 512k;
                alias /usr/share/nginx/html/static/;
            }

            location /socket.io {
                proxy_set_header Host \\\$$http_host;
                proxy_set_header X-Real-IP \\\$$remote_addr;
                proxy_set_header X-Forwarded-For \\\$$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \\\$$scheme;
                proxy_http_version 1.1;
                proxy_buffering off;
                proxy_set_header Upgrade \\\$$http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_pass http://socketio_nodes/socket.io;
            }

            location / {
                proxy_set_header Host \\\$$http_host;
                proxy_set_header X-Real-IP \\\$$remote_addr;
                proxy_set_header X-Forwarded-For \\\$$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \\\$$scheme;
                proxy_pass http://web-primary:5000;
            }
        }
      EON
      nginx -g "daemon off;"
      EOF'